{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ratti\\\\myicecreamapp\\\\frontend\\\\src\\\\pages\\\\showdis.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React from \"react\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport logo from \"../components/back.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowST = () => {\n  _s();\n  const navigate = useNavigate();\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/sendimages\").then(res => res.json()).then(data => setImages(data)).catch(err => console.error(\"Error fetching images:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Containner-showdis\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Text-show\",\n      children: \"Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Img-con\",\n      children: imageBase64.map((src, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          alt: `Flask Image ${index}`,\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Div-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Text-name\",\n            children: \"Name : \"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"Text-result\",\n            children: \"Result : \"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Div-back\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/show\",\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"\",\n          className: \"Back-ele\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Back-text\",\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(ShowST, \"7EvQKtlb+PHOw3FOpFS96hJqYfo=\", false, function () {\n  return [useNavigate];\n});\n_c = ShowST;\nexport default ShowST;\nvar _c;\n$RefreshReg$(_c, \"ShowST\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useNavigate","Link","axios","logo","jsxDEV","_jsxDEV","ShowST","_s","navigate","images","setImages","fetch","then","res","json","data","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","imageBase64","map","src","index","alt","to","_c","$RefreshReg$"],"sources":["C:/Users/Ratti/myicecreamapp/frontend/src/pages/showdis.js"],"sourcesContent":["import '../App.css';\r\nimport React from \"react\";\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport logo from \"../components/back.png\";\r\n\r\n\r\nconst ShowST = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://127.0.0.1:5000/sendimages\")\r\n        .then((res) => res.json())\r\n        .then((data) => setImages(data))\r\n        .catch((err) => console.error(\"Error fetching images:\", err));\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"Containner-showdis\">\r\n            <p className='Text-show'>Prediction</p>\r\n            <div className='Img-con'>\r\n            {imageBase64.map((src, index) => (\r\n                <div key={index} className=\"image-container\">\r\n                    <img src={src} alt={`Flask Image ${index}`} className='image'/>\r\n                    <div key={index} className='Div-result'>\r\n                        <p key={index} className='Text-name'>Name : </p>\r\n                        <p key={index} className='Text-result'>Result : </p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n            <div className='Div-back'>\r\n            <Link to=\"/show\" className=\"logo\">\r\n                <img src={logo} alt=\"\" className=\"Back-ele\" />\r\n            </Link>\r\n            <p className='Back-text'>back</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShowST;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}