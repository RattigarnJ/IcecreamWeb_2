{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ratti\\\\myicecreamapp\\\\frontend\\\\src\\\\pages\\\\pullst.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport logo from \"../components/back.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Show = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedDateStart, setSelectedDateStart] = useState(\"\");\n  const [selectedDateStop, setSelectedDateStop] = useState(\"\");\n  const [periodday, setPeriodday] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleLogin = () => {\n    navigate(\"/login\");\n  };\n  const splitDate = (dateString1, dateString2) => {\n    const [year1, month1, day1] = dateString1.split(\"-\");\n    const [year2, month2, day2] = dateString2.split(\"-\");\n    return {\n      year1,\n      month1,\n      day1,\n      day2\n    };\n  };\n  function getColumnAndRow(selectedDate) {\n    // คำนวณ column (วันในสัปดาห์: จันทร์=1, อาทิตย์=7)\n    let weekday = (dateObj.getDay() + 6) % 7 + 1;\n    let column = weekday;\n    let day = dateObj.getDate();\n\n    // คำนวณ row\n    const firstDayOfMonth = new Date(dateObj.getFullYear(), dateObj.getMonth(), 1);\n    let firstDayColumn = (firstDayOfMonth.getDay() + 6) % 7 + 1;\n    let dayPosition = day + (firstDayColumn - 1);\n    let row = Math.ceil(dayPosition / 7);\n    return {\n      day,\n      column,\n      row\n    };\n  }\n  const {\n    year1,\n    month1,\n    day1,\n    day2\n  } = splitDate(selectedDateStart, selectedDateStop);\n  setPeriodday(day2 - day1);\n  const {\n    day,\n    column,\n    row\n  } = getColumnAndRow(selectedDateStart);\n  const runRPA = async () => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/run_rpa\", {\n        param1: row,\n        param2: column,\n        param3: month1,\n        param4: year1,\n        param5: periodday\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessage(\"Failed to start RPA\");\n    }\n  };\n  const show = () => {\n    alert(`periodday : ${periodday} , d=${day} , c=${column} , r=${row}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Containner-pull\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Standing Contract - Pull images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Text-date\",\n      children: \"Day - Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDateStart,\n      onChange: e => setSelectedDateStart(e.target.value),\n      min: \"2024-01-01\",\n      max: \"2025-12-31\",\n      className: \"Date-picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Text-date\",\n      children: \"Day - Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDateStop,\n      onChange: e => setSelectedDateStop(e.target.value),\n      min: \"2024-01-01\",\n      max: \"2025-12-31\",\n      className: \"Date-picker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Button-stylePull\",\n      onClick: show,\n      children: \"Pull Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Div-back\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/pull\",\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"\",\n          className: \"Back-ele\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Back-text\",\n        children: \"back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Show, \"ZD4t2e51fmWCbrGgoQHgOauH0Ek=\", false, function () {\n  return [useNavigate];\n});\n_c = Show;\nexport default Show;\nvar _c;\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"names":["React","useState","useNavigate","Link","axios","logo","jsxDEV","_jsxDEV","Show","_s","navigate","selectedDateStart","setSelectedDateStart","selectedDateStop","setSelectedDateStop","periodday","setPeriodday","message","setMessage","handleLogin","splitDate","dateString1","dateString2","year1","month1","day1","split","year2","month2","day2","getColumnAndRow","selectedDate","weekday","dateObj","getDay","column","day","getDate","firstDayOfMonth","Date","getFullYear","getMonth","firstDayColumn","dayPosition","row","Math","ceil","runRPA","response","post","param1","param2","param3","param4","param5","data","error","console","show","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","min","max","onClick","to","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Ratti/myicecreamapp/frontend/src/pages/pullst.js"],"sourcesContent":["import '../App.css';\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport logo from \"../components/back.png\";\r\n\r\nconst Show = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [selectedDateStart, setSelectedDateStart] = useState(\"\");\r\n    const [selectedDateStop, setSelectedDateStop] = useState(\"\");\r\n    const [periodday, setPeriodday] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleLogin = () => {\r\n        navigate(\"/login\");\r\n    };\r\n\r\n    const splitDate = (dateString1, dateString2) => {\r\n        const [year1, month1, day1] = dateString1.split(\"-\");\r\n        const [year2, month2, day2] = dateString2.split(\"-\")\r\n        return { year1, month1, day1, day2};\r\n    };\r\n\r\n    function getColumnAndRow(selectedDate) {\r\n    \r\n        // คำนวณ column (วันในสัปดาห์: จันทร์=1, อาทิตย์=7)\r\n        let weekday = (dateObj.getDay() + 6) % 7 + 1;\r\n        let column = weekday; \r\n        let day = dateObj.getDate(); \r\n    \r\n        // คำนวณ row\r\n        const firstDayOfMonth = new Date(dateObj.getFullYear(), dateObj.getMonth(), 1);\r\n        let firstDayColumn = ((firstDayOfMonth.getDay() + 6) % 7) + 1; \r\n        let dayPosition = day + (firstDayColumn - 1);\r\n        let row = Math.ceil(dayPosition / 7); \r\n    \r\n        return { day, column, row }; \r\n    }\r\n\r\n    const { year1, month1, day1, day2} = splitDate(selectedDateStart,selectedDateStop);\r\n    setPeriodday(day2 - day1);\r\n    const {day, column, row} = getColumnAndRow(selectedDateStart)\r\n\r\n    const runRPA = async () => {\r\n        try {\r\n          const response = await axios.post(\"http://127.0.0.1:5000/run_rpa\", {\r\n            param1: row,\r\n            param2: column,\r\n            param3: month1,\r\n            param4: year1,\r\n            param5: periodday,\r\n          });\r\n    \r\n          setMessage(response.data.message);\r\n        } catch (error) {\r\n          console.error(\"Error:\", error);\r\n          setMessage(\"Failed to start RPA\");\r\n        }\r\n    };\r\n\r\n    const show = () => {\r\n        alert(`periodday : ${periodday} , d=${day} , c=${column} , r=${row}`)\r\n    };\r\n\r\n    return (\r\n        <div className=\"Containner-pull\">\r\n            <p>Standing Contract - Pull images</p>\r\n            <p className='Text-date'>Day - Start</p>\r\n            <input\r\n                type=\"date\"\r\n                value={selectedDateStart}\r\n                onChange={(e) => setSelectedDateStart(e.target.value)}\r\n                min=\"2024-01-01\" \r\n                max=\"2025-12-31\" \r\n                className=\"Date-picker\"\r\n            />\r\n            <p className='Text-date'>Day - Stop</p>\r\n            <input\r\n                type=\"date\"\r\n                value={selectedDateStop}\r\n                onChange={(e) => setSelectedDateStop(e.target.value)}\r\n                min=\"2024-01-01\" \r\n                max=\"2025-12-31\" \r\n                className=\"Date-picker\"\r\n            />\r\n            <button\r\n                className='Button-stylePull'\r\n                onClick={show}\r\n            >\r\n            Pull Images\r\n            </button>\r\n            <div className='Div-back'>\r\n            <Link to=\"/pull\" className=\"logo\">\r\n                <img src={logo} alt=\"\" className=\"Back-ele\" />\r\n            </Link>\r\n            <p className='Back-text'>back</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Show;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}